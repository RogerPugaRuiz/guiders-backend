---
title: Diagrama de Clases - AuthContext (27-04-2025)
---

%% Diagrama de clases del contexto de autenticaciÃ³n (auth)
%% Incluye entidades, value objects y repositorios principales

classDiagram
    %% UserAccount y value objects
    class UserAccount {
        +UserAccountId id
        +UserAccountEmail email
        +UserAccountPassword password
        +UserAccountCreatedAt createdAt
        +UserAccountUpdatedAt updatedAt
        +Optional~UserAccountLastLogin~ lastLoginAt
        +static create()
        +static fromPrimitives()
        +equals()
        +updateLastLoginAt()
        +toPrimitives()
    }
    class UserAccountId
    class UserAccountEmail
    class UserAccountPassword
    class UserAccountCreatedAt
    class UserAccountUpdatedAt
    class UserAccountLastLogin
    class Optional
    UserAccount --> UserAccountId
    UserAccount --> UserAccountEmail
    UserAccount --> UserAccountPassword
    UserAccount --> UserAccountCreatedAt
    UserAccount --> UserAccountUpdatedAt
    UserAccount --> Optional
    Optional --> UserAccountLastLogin

    class UserAccountRepository {
        <<interface>>
        +findByEmail(email)
        +findById(id)
        +save(userAccount)
    }
    UserAccountRepository ..> UserAccount

    %% ApiKey y value objects
    class ApiKey {
        +ApiKeyId id
        +ApiKeyValue apiKey
        +ApiKeyKid kid
        +ApiKeyDomain domain
        +ApiKeyPublicKey publicKey
        +ApiKeyPrivateKey privateKey
        +ApiKeyCreatedAt createdAt
        +static create()
        +static fromPrimitive()
        +toPrimitive()
    }
    class ApiKeyId
    class ApiKeyValue
    class ApiKeyKid
    class ApiKeyDomain
    class ApiKeyPublicKey
    class ApiKeyPrivateKey
    class ApiKeyCreatedAt
    ApiKey --> ApiKeyId
    ApiKey --> ApiKeyValue
    ApiKey --> ApiKeyKid
    ApiKey --> ApiKeyDomain
    ApiKey --> ApiKeyPublicKey
    ApiKey --> ApiKeyPrivateKey
    ApiKey --> ApiKeyCreatedAt

    class ApiKeyRepository {
        <<interface>>
        +save(apiKey)
        +getApiKeyByDomain(domain)
        +getApiKeyByApiKey(apiKey)
        +getAllApiKeys()
    }
    ApiKeyRepository ..> ApiKey

    %% VisitorAccount y value objects
    class VisitorAccount {
        +VisitorAccountId id
        +VisitorAccountClientID clientID
        +VisitorAccountUserAgent userAgent
        +VisitorAccountCreatedAt createdAt
        +VisitorAccountApiKey apiKey
        +Optional~VisitorAccountLastLoginAt~ lastLoginAt
        +static create()
        +static fromPrimitives()
        +equals()
        +updateLastLoginAt()
        +toPrimitives()
    }
    class VisitorAccountId
    class VisitorAccountClientID
    class VisitorAccountUserAgent
    class VisitorAccountCreatedAt
    class VisitorAccountApiKey
    class VisitorAccountLastLoginAt
    VisitorAccount --> VisitorAccountId
    VisitorAccount --> VisitorAccountClientID
    VisitorAccount --> VisitorAccountUserAgent
    VisitorAccount --> VisitorAccountCreatedAt
    VisitorAccount --> VisitorAccountApiKey
    VisitorAccount --> Optional
    Optional --> VisitorAccountLastLoginAt

    class AuthVisitorRepository {
        <<interface>>
        +save(visitor)
        +findByApiKey(apiKey)
        +findByClientID(clientID)
    }
    AuthVisitorRepository ..> VisitorAccount
