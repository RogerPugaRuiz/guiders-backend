---
title: Real Time Context Class Diagram
date: 2025-04-27
---

%% Diagrama de clases del contexto real-time
classDiagram
    %% Entidad principal ConnectionUser
    class ConnectionUser {
        - ConnectionUserId userId
        - Optional<ConnectionSocketId> socketId
        - ConnectionRole[] roles
        + static create(params)
        + static fromPrimitives(primitives)
        + isSameUser(userId)
        + isConnected()
        + hasRole(role)
        + connect(socketId)
        + disconnect()
        + sendMessage(params)
        + toPrimitives()
    }

    class ConnectionUserId
    class ConnectionSocketId
    class ConnectionRole {
        + value: string
        + static create(value)
        + isVisitor
        + isCommercial
    }
    class Optional
    class AggregateRoot

    %% Value Objects
    class ConnectionRoom

    %% Eventos
    class RealTimeMessageSendEvent {
        + from: string
        + to: string
        + message: string
        + timestamp: Date
        + direction: 'toVisitor' | 'toCommercial'
        + static create(params)
    }
    class ConnectedEvent
    class DisconnectedEvent

    %% Gateway y servicios
    class RealTimeWebSocketGateway {
        + handleConnection(client)
        + handleDisconnect(client)
        + handleVisitorSendMessage(client, event)
        + handleCommercialSendMessage(client, event)
        + handleStartChat(client, event)
        + sendNotificationToParticipants(params)
        + sendNotification(payload, recipientId, type)
    }
    class WsChatMessageEmitterService {
        + emit(params)
    }
    class WsNotificationService {
        + notify(params)
        + notifyRole(params)
    }
    class WsNewChatNotificationService {
        + notifyNewChat(chatPrimitives, to)
    }

    %% Relaciones
    ConnectionUser --> ConnectionUserId
    ConnectionUser --> ConnectionSocketId
    ConnectionUser --> ConnectionRole
    ConnectionUser --> Optional
    ConnectionUser --|> AggregateRoot
    ConnectionUser ..> RealTimeMessageSendEvent : <<aplica>>
    ConnectionUser ..> ConnectedEvent : <<aplica>>
    ConnectionUser ..> DisconnectedEvent : <<aplica>>
    RealTimeWebSocketGateway --> WsChatMessageEmitterService
    RealTimeWebSocketGateway --> WsNotificationService
    RealTimeWebSocketGateway --> WsNewChatNotificationService
    WsChatMessageEmitterService --> RealTimeWebSocketGateway
    WsNotificationService --> RealTimeWebSocketGateway
    WsNewChatNotificationService --> RealTimeWebSocketGateway
    ConnectionRole --> ConnectionRoom
