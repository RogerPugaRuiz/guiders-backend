version: '3.9'   # usa la última spec, aunque podrías omitir esta línea

services:
  postgres:
    image: postgres:14.11-alpine   # versión válida y estable
    container_name: postgres-prod
    restart: always

    # credenciales via env vars en .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE}

    # salud: para que otros servicios esperen al DB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME}"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

    # logs rotados, para no crecer sin control
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    ports:
      - "${DATABASE_PORT:-5432}:5432"

    volumes:
      - pgdata:/var/lib/postgresql/data:rw
    networks:
      - postgres-net

  redis:
    image: redis:7-alpine
    container_name: redis-prod
    restart: always
    
    # configuración de salud para Redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s

    # logs rotados
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    ports:
      - "${REDIS_PORT:-6379}:6379"
    
    volumes:
      - redis-data:/data:rw
    
    networks:
      - redis-net

  mongodb:
    image: mongo:7.0
    container_name: mongodb-prod
    restart: always
    
    # credenciales via env vars en .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    
    # configuración de salud para MongoDB
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

    # logs rotados
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    ports:
      - "${MONGODB_PORT:-27017}:27017"
    
    volumes:
      - mongodb-data:/data/db:rw
    
    networks:
      - mongodb-net

volumes:
  pgdata:
    driver: local
  redis-data:
    driver: local
  mongodb-data:
    driver: local

networks:
  postgres-net:
    driver: bridge
  redis-net:
    driver: bridge
  mongodb-net:
    driver: bridge
